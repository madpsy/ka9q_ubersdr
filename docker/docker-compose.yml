version: '3.8'

services:
  # ka9q_ubersdr service - Web interface
  # Note: ka9q-radio (radiod) is managed separately in ~/repos/ka9q-radio/docker
  ubersdr:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    image: ka9q_ubersdr:latest
    container_name: ka9q_ubersdr
    restart: unless-stopped
    
    # Use external bridge network for multicast communication with radiod
    # The radiod container must be started first from ka9q-radio repository
    networks:
      - sdr-network
    
    # Expose web interface port
    ports:
      - "8080:8080"
    
    # Environment variables
    environment:
      - ADMIN_PASSWORD=${ADMIN_PASSWORD:-}
      - TZ=${TZ:-UTC}
    
    # Volumes for persistent configuration
    volumes:
      - ubersdr-data:/app
    
    # Healthcheck
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s
    
    # Resource limits (optional)
    # deploy:
    #   resources:
    #     limits:
    #       cpus: '2'
    #       memory: 1G
    #     reservations:
    #       cpus: '0.5'
    #       memory: 256M

# External network shared with ka9q-radio container
# Create with: docker network create sdr-network --subnet 172.20.0.0/16
# The ka9q-radio container in ~/repos/ka9q-radio/docker also uses this network
networks:
  sdr-network:
    external: true

volumes:
  ubersdr-data: